# Apache Virtual Host Configuration for MLR Auto Phase-01 VPS deployment
# This file should be placed in /etc/apache2/sites-available/mlr-auto.conf
# Then enable with: sudo a2ensite mlr-auto && sudo a2dissite 000-default && sudo systemctl reload apache2

<VirtualHost *:80>
    ServerName theexperimentai.org
    ServerAlias www.theexperimentai.org
    DocumentRoot /var/www/html/mlr-auto
    
    # Enable required modules (ensure these are loaded)
    # sudo a2enmod proxy proxy_http headers rewrite ssl
    
    # Security headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "no-referrer-when-downgrade"
    Header always set Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'"
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/mlr-auto-error.log
    CustomLog ${APACHE_LOG_DIR}/mlr-auto-access.log combined
    LogLevel warn
    
    # Client max body size for file uploads (16MB)
    LimitRequestBody 16777216
    
    # Timeout settings for large uploads
    TimeOut 300
    
    # CRITICAL: API Routes - Prevent HTML error pages
    <LocationMatch "^/(upload|convert-to-pdf|download|api)">
        # Proxy to Flask application
        ProxyPreserveHost On
        ProxyPass http://127.0.0.1:5000
        ProxyPassReverse http://127.0.0.1:5000
        
        # CRITICAL: Don't override Flask error responses with Apache error pages
        ProxyErrorOverride Off
        
        # Force JSON content type for API responses
        Header always set Content-Type "application/json" "expr=%{CONTENT_TYPE} =~ /text\/html/"
        
        # CORS headers for API routes
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header always set Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
        
        # Handle preflight OPTIONS requests
        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=204,L]
        
        # Timeout settings for API routes
        ProxyTimeout 300
    </LocationMatch>
    
    # Upload endpoint - specific configuration
    <Location "/upload">
        ProxyPass http://127.0.0.1:5000/upload
        ProxyPassReverse http://127.0.0.1:5000/upload
        ProxyErrorOverride Off
        
        # Ensure JSON responses
        Header always set Accept "application/json"
        
        # Extended timeout for file uploads
        ProxyTimeout 300
        
        # Buffer settings
        SetEnv proxy-sendchunked 1
    </Location>
    
    # PDF conversion endpoint
    <Location "/convert-to-pdf">
        ProxyPass http://127.0.0.1:5000/convert-to-pdf
        ProxyPassReverse http://127.0.0.1:5000/convert-to-pdf
        ProxyErrorOverride Off
        ProxyTimeout 300
    </Location>
    
    # Download endpoint
    <Location "/download">
        ProxyPass http://127.0.0.1:5000/download
        ProxyPassReverse http://127.0.0.1:5000/download
        ProxyErrorOverride Off
        ProxyTimeout 300
    </Location>
    
    # Info endpoint
    <Location "/info">
        ProxyPass http://127.0.0.1:5000/info
        ProxyPassReverse http://127.0.0.1:5000/info
        ProxyErrorOverride Off
    </Location>
    
    # Static files - serve directly from Apache
    Alias /static /var/www/html/mlr-auto/static
    <Directory "/var/www/html/mlr-auto/static">
        Require all granted
        
        # Cache control for static files
        <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg)$">
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
            Header append Cache-Control "public, immutable"
        </FilesMatch>
        
        # Security for static files
        <FilesMatch "\.(js|css)$">
            Header set Content-Type "text/plain; charset=utf-8"
        </FilesMatch>
    </Directory>
    
    # Main application directory
    <Directory "/var/www/html/mlr-auto">
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
        
        # Default file handling
        DirectoryIndex index.html index.htm
        
        # Fallback to index.html for SPA routing
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^/(upload|convert-to-pdf|download|api|static)
        RewriteRule . /index.html [L]
        
        # Cache control for HTML files
        <FilesMatch "\.(html|htm)$">
            ExpiresActive On
            ExpiresDefault "access plus 0 seconds"
            Header set Cache-Control "no-cache, no-store, must-revalidate"
        </FilesMatch>
    </Directory>
    
    # Security: Block access to sensitive files
    <FilesMatch "^\.(htaccess|htpasswd|ini|log|sh|inc|bak)$">
        Require all denied
    </FilesMatch>
    
    <FilesMatch "\.(py|pyc|pyo)$">
        Require all denied
    </FilesMatch>
    
    <DirectoryMatch "/\.(git|svn|hg)">
        Require all denied
    </DirectoryMatch>
    
    # Custom error pages (only for non-API routes)
    ErrorDocument 404 /404.html
    ErrorDocument 500 /50x.html
    
    # Disable server signature
    ServerSignature Off
    
    # Compression
    <IfModule mod_deflate.c>
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.pdf$ no-gzip dont-vary
    </IfModule>
</VirtualHost>

# HTTPS configuration (uncomment after SSL setup)
# <VirtualHost *:443>
#     ServerName theexperimentai.org
#     ServerAlias www.theexperimentai.org
#     DocumentRoot /var/www/html/mlr-auto
#     
#     # SSL configuration
#     SSLEngine on
#     SSLCertificateFile /etc/letsencrypt/live/theexperimentai.org/fullchain.pem
#     SSLCertificateKeyFile /etc/letsencrypt/live/theexperimentai.org/privkey.pem
#     
#     # SSL settings
#     SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
#     SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
#     SSLHonorCipherOrder off
#     SSLSessionTickets off
#     
#     # HSTS (optional)
#     Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
#     
#     # Include all the same location blocks as above
#     # ... (copy all location and directory blocks from HTTP virtual host)
# }

# Redirect HTTP to HTTPS (uncomment after SSL setup)
# <VirtualHost *:80>
#     ServerName theexperimentai.org
#     ServerAlias www.theexperimentai.org
#     Redirect permanent / https://theexperimentai.org/
# </VirtualHost>

# Additional Apache modules that should be enabled:
# sudo a2enmod proxy
# sudo a2enmod proxy_http
# sudo a2enmod headers
# sudo a2enmod rewrite
# sudo a2enmod ssl
# sudo a2enmod expires
# sudo a2enmod deflate