# MLR Auto Phase-01 VPS Environment Configuration Template
# Copy this file to .env and update the values for your VPS deployment
# Location: /var/www/html/mlr-auto/.env

# =============================================================================
# FLASK CONFIGURATION
# =============================================================================

# Flask environment (production for VPS)
FLASK_ENV=production
FLASK_DEBUG=False

# Secret key for Flask sessions (CHANGE THIS!)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production

# Flask host and port (for direct deployment)
# Use 0.0.0.0 to bind to all interfaces, 127.0.0.1 for localhost only
FLASK_HOST=127.0.0.1
FLASK_PORT=5000

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Maximum file size for uploads (in bytes)
# 16MB = 16777216, 32MB = 33554432, 64MB = 67108864
MAX_CONTENT_LENGTH=16777216

# Upload and output directories (ensure these exist and have proper permissions)
UPLOAD_FOLDER=/var/www/uploads
OUTPUT_FOLDER=/var/www/output

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=txt,pdf,png,jpg,jpeg,gif,doc,docx,xls,xlsx,ppt,pptx

# =============================================================================
# BLOB STORAGE CONFIGURATION (if using cloud storage)
# =============================================================================

# Blob storage token (if using Vercel Blob or similar)
# Leave empty if using local file storage
BLOB_READ_WRITE_TOKEN=

# Storage type: 'local' or 'blob'
STORAGE_TYPE=local

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins for CORS (comma-separated)
# Use * for all origins (not recommended for production)
# Example: https://yourdomain.com,https://www.yourdomain.com
CORS_ORIGINS=*

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (ensure directory exists and is writable)
LOG_FILE=/var/log/mlr-auto/app.log

# Log rotation settings
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# =============================================================================
# DATABASE CONFIGURATION (if using database)
# =============================================================================

# Database URL (if using database for session storage, etc.)
# Examples:
# SQLite: sqlite:///app.db
# PostgreSQL: postgresql://user:password@localhost/dbname
# MySQL: mysql://user:password@localhost/dbname
DATABASE_URL=

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable/disable security headers
SECURITY_HEADERS=True

# Content Security Policy
CSP_DEFAULT_SRC=self
CSP_SCRIPT_SRC=self unsafe-inline
CSP_STYLE_SRC=self unsafe-inline
CSP_IMG_SRC=self data: blob:

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Enable/disable gzip compression
COMPRESSION_ENABLED=True

# Cache timeout for static files (in seconds)
STATIC_CACHE_TIMEOUT=31536000  # 1 year

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================

# Enable health check endpoint
HEALTH_CHECK_ENABLED=True

# Health check endpoint path
HEALTH_CHECK_PATH=/health

# =============================================================================
# EMAIL CONFIGURATION (if using email notifications)
# =============================================================================

# SMTP settings for email notifications
SMTP_SERVER=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_USE_TLS=True

# Email addresses
MAIL_FROM=noreply@yourdomain.com
MAIL_ADMIN=admin@yourdomain.com

# =============================================================================
# RATE LIMITING (if implemented)
# =============================================================================

# Rate limiting settings
RATE_LIMIT_ENABLED=True
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup settings for uploaded files
BACKUP_ENABLED=False
BACKUP_DIRECTORY=/var/backups/mlr-auto
BACKUP_RETENTION_DAYS=30

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# API keys for external services (if any)
EXTERNAL_API_KEY=
EXTERNAL_API_URL=

# =============================================================================
# DEVELOPMENT/TESTING SETTINGS
# =============================================================================

# Enable/disable testing mode
TESTING=False

# Test database URL (if different from production)
TEST_DATABASE_URL=

# =============================================================================
# DEPLOYMENT SPECIFIC SETTINGS
# =============================================================================

# Server name/domain
SERVER_NAME=yourdomain.com

# Preferred URL scheme
PREFERRED_URL_SCHEME=https

# Application root (if deployed in subdirectory)
APPLICATION_ROOT=/

# =============================================================================
# NOTES FOR VPS DEPLOYMENT
# =============================================================================

# 1. Ensure all directories specified above exist and have proper permissions:
#    sudo mkdir -p /var/www/uploads /var/www/output /var/log/mlr-auto /var/backups/mlr-auto
#    sudo chown -R www-data:www-data /var/www/uploads /var/www/output /var/log/mlr-auto
#    sudo chmod -R 755 /var/www/uploads /var/www/output
#    sudo chmod -R 644 /var/log/mlr-auto

# 2. Set proper file permissions for this .env file:
#    sudo chown www-data:www-data .env
#    sudo chmod 600 .env

# 3. Generate a strong secret key:
#    python3 -c "import secrets; print(secrets.token_hex(32))"

# 4. Update CORS_ORIGINS with your actual domain(s)

# 5. Configure log rotation in /etc/logrotate.d/mlr-auto:
#    /var/log/mlr-auto/*.log {
#        daily
#        missingok
#        rotate 52
#        compress
#        delaycompress
#        notifempty
#        create 644 www-data www-data
#    }

# 6. For production, consider using a process manager like systemd, supervisor, or PM2

# 7. Set up SSL/TLS certificates using Let's Encrypt:
#    sudo apt install certbot python3-certbot-nginx
#    sudo certbot --nginx -d yourdomain.com

# 8. Configure firewall:
#    sudo ufw allow 22/tcp   # SSH
#    sudo ufw allow 80/tcp   # HTTP
#    sudo ufw allow 443/tcp  # HTTPS
#    sudo ufw --force enable

# 9. Monitor application logs:
#    tail -f /var/log/mlr-auto/app.log
#    sudo journalctl -u mlr-auto -f

# 10. Regular maintenance:
#     - Monitor disk space in upload/output directories
#     - Rotate and clean old log files
#     - Update dependencies regularly
#     - Monitor system resources (CPU, memory, disk)
#     - Backup important data